ProposedSolution:
#include<stdio.h>
#include<stdlib.h> #include<unistd.h>
voidprint(intx[][10],intn,intm){ inti,j; for(i=0;i<n;i++){ printf("\n"); for(j=0;j<m;j++){ printf("%d\t",x[i][j]);
}
}
}
//ResourceRequestalgorithm
voidres_request(intA[10][10],intN[10][10],intAV[10][10],intpid,intm)
{
intreqmat[1][10]; inti;
printf("\nEnteradditionalrequest:-\n"); for(i=0;i<m;i++){ printf("Requestforresource%d:",i+1);â€ƒ
scanf("%d",&reqmat[0][i]);
}
for(i=0;i<m;i++)
if(reqmat[0][i]>N[pid][i]){
printf("\nErrorencountered.\n"); exit(0);
}
for(i=0;i<m;i++)
if(reqmat[0][i]>AV[0][i]){
printf("\nResourcesunavailable.\n"); exit(0);
}
for(i=0;i<m;i++){
AV[0][i]-=reqmat[0][i];
A[pid][i]+=reqmat[0][i];
N[pid][i]-=reqmat[0][i];
}
}
//Safetyalgorithm
intsafety(intA[][10],intN[][10],intAV[1][10],intn,intm,inta[]){
inti,j,k,x=0; intF[10],W[1][10]; intpflag=0,flag=0; for(i=0;i<n;i++)
F[i]=0; for(i=0;i<m;i++)
W[0][i]=AV[0][i];
for(k=0;k<n;k++){ for(i=0;i<n;i++){
if(F[i]==0){
flag=0; for(j=0;j<m;j++){
if(N[i][j]>W[0][j]) flag=1;
}
if(flag==0&&F[i]==0){
for(j=0;j<m;j++)
W[0][j]+=A[i][j]; F[i]=1; pflag++; a[x++]=i;
}
}
}
if(pflag==n)
return1;
}
return0;
}
//Banker'sAlgorithm
voidaccept(intA[][10],intN[][10],intM[10][10],intW[1][10],int*n,int
*m){inti,j;
printf("\nEntertotalno.ofprocesses:"); scanf("%d",n);
printf("\nEntertotalno.ofresources:"); scanf("%d",m); for(i=0;i<*n;i++){ printf("\nProcess%d\n",i+1); for(j=0;j<*m;j++){
printf("Allocationforresource%d:",j+1); scanf("%d",&A[i][j]);
printf("Maximumforresource%d:",j+1);
scanf("%d",&M[i][j]);
}
}
printf("\nAvailableresources:\n"); for(i=0;i<*m;i++){
printf("Resource%d:",i+1);
scanf("%d",&W[0][i]);
}
for(i=0;i<*n;i++)
for(j=0;j<*m;j++)
N[i][j]=M[i][j]-A[i][j];
printf("\nAllocationMatrix"); print(A,*n,*m);
printf("\nMaximumRequirementMatrix"); print(M,*n,*m); printf("\nNeedMatrix"); print(N,*n,*m);
}
intbanker(intA[][10],intN[][10],intW[1][10],intn,int
m){intj,i,a[10]; j=safety(A,N,W,n,m,a); if(j!=0){
printf("\n\n"); for(i=0;i<n;i++)
printf("P%d",a[i]);
printf("\nAsafetysequencehasbeen detected.\n");return1;
}else{ printf("\nDeadlockhasoccured.\n"); return0;
}
}
intmain(){
intret; intA[10][10]; intM[10][10]; intN[10][10]; intW[1][10];
intn,m,pid,ch;
printf("\nDEADLOCKAVOIDANCEUSINGBANKER'SALGORITHM\n"); accept(A,N,M,W,&n,&m); ret=banker(A,N,W,n,m); if(ret!=0){
printf("\nDoyouwantmakeanadditionalrequest?(1=Yes|0=No)"); scanf("%d",&ch); if(ch==1){
printf("\nEnterprocessno.:"); scanf("%d",&pid); res_request(A,N,W,pid-1,m); ret=banker(A,N,W,n,m); if(ret==0)
exit(0);
}
}else exit(0);
return0;
}
